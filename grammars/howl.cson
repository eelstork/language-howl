name      : 'Howl'
scopeName : 'source.howl'
type      : 'tree-sitter'
parser    : 'tree-sitter-howl'
fileTypes : ['howl']

scopes:
  modifiers: 'storage.modifier.howl'
  cat: 'keyword.other.class.howl'
  op: 'keyword.operator.cs'
  prim: 'keyword.type.howl'
  bt: 'constant.language.status.howl'
  flow: 'keyword.control.howl'
  return: 'keyword.control.return.howl'
  key: 'keyword.other.howl'
  comment: 'comment.howl'
  z: 'operator.howl'
  #
  null: 'constant.language.null.howl'
  bool: 'constant.language.boolean.howl'
  char: 'string.quoted.single.howl'
  real: 'constant.numeric.howl'
  int: 'constant.numeric.howl'
  str: 'string.quoted.double.howl'
  #
  id: 'entity.name.id.howl'
  type: 'entity.name.type.howl'
  z: 'punctuation.other.howl'
  # ----------------------
 # '''
 # "㆑"
 # ''': 'keyword.control.return.true.howl'
  # ----------------------
  '''
  "⤬"
  ''': 'keyword.control.return.false.howl'
  # ----------------------
  '''
  "⏂"
  ''': 'keyword.control.return.null.howl'
  # ----------------------
  '''
  "Ⅳ"
  ''': 'keyword.control.yield.howl'
  # ----------------------
  '''
  "✓"
  ''': 'bool.true.howl'
  # ----------------------
  '''
  "✗"
  ''': 'bool.false.howl'
  # ----------------------
  '''
  "{"
  ''': 'keyword.control.howl'
  # ----------------------
  '''
  "}"
  ''': 'keyword.control.howl'

 # Active Logic =====================================================

  # ----------------------
  '''
  "◇"
  ''': 'status.done.howl'
  # ----------------------
  '''
  "■"
  ''': 'status.fail.howl'
  # ----------------------
  '''
  "☡"
  ''': 'status.cont.howl'
  # ----------------------
  '''
  "☡̠"
  ''': 'keyword.control.return.status.cont.howl'
  # ----------------------
  '''
  "◇̠"
  ''': 'keyword.control.return.status.done.howl'
  # ----------------------
  '''
  "■̠"
  ''': 'keyword.control.return.status.fail.howl'
  # ----------------------
  '''
  "⌽"
  ''': 'keyword.control.return.status.void.howl'
