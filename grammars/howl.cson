name      : 'Howl'
scopeName : 'source.howl'
type      : 'tree-sitter'
parser    : 'tree-sitter-howl'
fileTypes : ['howl']

scopes:
  mod: 'storage.modifier.howl'
  cat: 'keyword.other.class.cs'
  op: 'keyword.operator.cs'
  prim: 'keyword.type.howl'
  bt: 'constant.language.al'
  flow: 'keyword.control'
  return: 'keyword.control.return.cs'
  key: 'keyword.other.cs'
  comment: 'comment.cs'
  z: 'operator.cs'
  #
  null: 'constant.language.null.cs'
  bool: 'constant.language.boolean.cs'
  char: 'string.quoted.single.cs'
  real: 'constant.numeric.cs'
  int: 'constant.numeric.cs'
  str: 'string.quoted.double.cs'
  #
  id: 'entity.name.id'
  type: 'entity.name.type.howl'
  z: 'punctuation.other'
  #'bool1': {exact: '✗', scopes: 'false'},
  #'bool2': {exact: '✓', scopes: 'true'},
  # ----------------------
  '''
  "✓"
  ''': 'bool.true'
  # ----------------------
  '''
  "✗"
  ''': 'bool.false'
  # ----------------------
  '''
  "{"
  ''': 'keyword.control'
  # ----------------------
  '''
  "}"
  ''': 'keyword.control'
  # ----------------------
