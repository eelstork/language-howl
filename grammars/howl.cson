name      : 'Howl'
scopeName : 'source.howl'
type      : 'tree-sitter'
parser    : 'tree-sitter-howl'
fileTypes : ['howl']

scopes:
  modifiers: 'storage.modifier.howl'
  cat: 'keyword.other.class.howl'
  op: 'keyword.operator.cs'
  prim: 'keyword.type.howl'
  bt: 'constant.language.status.howl'
  flow: 'keyword.control.howl'
  return: 'keyword.control.return.howl'
  key: 'keyword.other.howl'
  comment: 'comment.howl'
  z: 'operator.howl'
  #
  null: 'constant.language.null.howl'
  bool: 'constant.language.boolean.howl'
  char: 'string.quoted.single.howl'
  real: 'constant.numeric.howl'
  int: 'constant.numeric.howl'
  str: 'string.quoted.double.howl'
  note: 'string.quoted.note.howl'
  #
  id: 'entity.name.id.howl'
  type: 'entity.name.type.howl'
  z: 'punctuation.other.howl'
  # ----------------------
  '''
  "‚Ä¢"
  ''': 'keyword.control.logged.howl'
  # ----------------------
  '''
  "„ÄÇ"
  ''': 'keyword.control.logged.howl'
  # ----------------------
  '''
  "„Üë"
  ''': 'keyword.control.return.true.howl'
  # ----------------------
  '''
  "‚§¨"
  ''': 'keyword.control.return.false.howl'
  # ----------------------
  '''
  "‚èÇ"
  ''': 'keyword.control.return.null.howl'
  # ----------------------
  '''
  "‚üÜ"
  ''': 'keyword.control.yield_return_null.howl'
  # ----------------------
  '''
  "‚úì"
  ''': 'bool.true.howl'
  # ----------------------
  '''
  "‚úó"
  ''': 'bool.false.howl'
  # ----------------------
  '''
  "{"
  ''': 'keyword.control.howl'
  # ----------------------
  '''
  "}"
  ''': 'keyword.control.howl'
  # ----------------------
  '''
  "‚´´"
  ''': 'vec.z.forward.howl'
  # ----------------------
  '''
  "‚´™"
  ''': 'vec.z.back.howl'
  # ----------------------
  '''
  "‚ä¢"
  ''': 'vec.x.right.howl'
  # ----------------------
  '''
  "‚ä£"
  ''': 'vec.x.left.howl'
  # ----------------------
  '''
  "‚ä•"
  ''': 'vec.y.up.howl'
  # ----------------------
  '''
  "‚ä§"
  ''': 'vec.y.down.howl'

 # Active Logic =====================================================

  # ----------------------
  '''
  "‚óá"
  ''': 'status.done.howl'
  # ----------------------
  '''
  "‚ñ†"
  ''': 'status.fail.howl'
  # ----------------------
  '''
  "‚ò°"
  ''': 'status.cont.howl'
  # ----------------------
  '''
  "‚ò°Ã±"
  ''': 'status.cont.howl'
  # ----------------------
  '''
  "‚óáÃ†"
  ''': 'status.done.howl'
  # ----------------------
  '''
  "‚ëÇ"
  ''': 'status.howl'
  # ----------------------
  '''
  "‚ñ†Ã†"
  ''': 'status.fail.howl'
  # ----------------------
  '''
  "‚®¥"
  ''': 'status.impending.howl'
  # ----------------------
  '''
  "‚®Æ"
  ''': 'status.pending.howl'
  # ----------------------
  '''
  "‚ñ∑"
  ''': 'status.action.howl'
  # ----------------------
  '''
  "‚ìß"
  ''': 'status.failure.howl'
  # ----------------------
  '''
  "ùüæ"
  ''': 'status.loop.howl'
  # ----------------------
  '''
  "Íúù"
  ''': 'certainty.now.howl'
  # ----------------------
  '''
  " æ"
  ''': 'certainty.due.howl'
  # ----------------------
  '''
  " ø"
  ''': 'certainty.undue.howl'
  # ----------------------
  '''
  "·¥º"
  ''': 'certainty.ever.howl'
  # ----------------------
  '''
  "À£"
  ''': 'certainty.fail.howl'
  # ----------------------
  '''
  "‚åΩ"
  ''': 'keyword.control.return.status.void.howl'
  # ----------------------
  '''
  "‚∏®"
  ''': 'punctuation.other.howl'
  # ----------------------
  '''
  "‚∏©"
  ''': 'punctuation.other.howl'
  # ----------------------
  '''
  "‚ÅÖ"
  ''': 'punctuation.other.howl'
  # ----------------------
  '''
  "‚ÅÜ"
  ''': 'punctuation.other.howl'
